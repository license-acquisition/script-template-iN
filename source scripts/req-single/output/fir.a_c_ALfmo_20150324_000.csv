company_name|address1|phone|license_number|status|CertificationHolder|HolderStatus|LicensedAs|first_issue_date|expiration_date
|A METRO LLC|555 SPARKMAN DR SUITE 1616 HUNTSVILLE, AL 35816|(256) 721-0400|A-0327|Approved|LEONARD HUNTER|Approved|NICET IV|10/1/2014|9/30/2015
|A-Com Protection Services|7521 VETERANS PARKWAY COLUMBUS, GA 31909|(706) 322-1870|A-0487|Approved|Charles Capps|Approved|NICET III|12/5/2014|9/30/2015
|ACCEL ALARM SYSTEMS, INC|638 E. WILLOW STREET SCOTTSBORO, AL 35768|(256) 508-3031|A-0227|Approved|FORREST GREGORY|Approved|NICET III|11/25/2014|9/30/2015
|ADS SECURITY, L.P.|100 OXMOOR BLVD SUITE 120 HOMEWOOD, AL 35209|(205) 945-7001|A-0269|Approved|JONATHAN NORRIS|Approved|NICET III|10/1/2014|9/30/2015
|ADS SECURITY, L.P.|500 WYNN DRIVE, SUITE 511 HUNTSVILLE, AL 35816|(256) 721-0122|A-0299|Approved|M. ARMSTRONG|Approved|NICET III|10/1/2014|9/30/2015
|ADT LLC|1501 YAMATO ROAD BOCA RATON, FL 33431|(561) 988-3700|A-0442|Approved|STANFORD CARLTON|Approved|NICET IV|10/1/2014|9/30/2015
|Advanced Cabling Systems|4950 NORTHSHORE LANE N. LITTLE ROCK, AR 72118|(501) 568-9599|A-0560|Approved|Michael White|Approved|NICET III|12/5/2014|9/30/2015

